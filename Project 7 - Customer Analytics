# I queried a database, containing multiple tables, to analyze customer and order data. 

-- How many orders were placed in January? 

SELECT COUNT(orderID)
FROM BIT_DB.JanSales; 

-- How many of those orders were for an iPhone? 379

SELECT COUNT(orderID)
FROM BIT_DB.JanSales 
WHERE Product = 'iPhone'; 

-- Select the customer account numbers for all the orders that were placed in February 

SELECT cust.acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales feb
ON cust.order_id = feb.orderID; 

-- Which product was the cheapest one sold in January, and what was the price? 

SELECT DISTINCT(Product), price 
FROM BIT_DB.JanSales 
WHERE price IN 
    (SELECT MIN(price) FROM BIT_DB.JanSales); 

-- What is the total revenue (price x number of products sold) for each product sold in January? 

SELECT Product, (SUM(Quantity) * price) AS total_revenue
FROM BIT_DB.JanSales
GROUP BY Product; 

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue? 

SELECT Product, SUM(Quantity) AS num_sold, (SUM(Quantity) * price) AS total_revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product; 

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? 

SELECT COUNT(cust.acctnum), AVG(Quantity * price) 
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE feb.Quantity > 2; 

-- List all the products sold in Los Angeles in February, and include how many of each were sold. 

SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales 
WHERE location LIKE '%Los Angeles%'
GROUP BY Product; 

-- Which locations in New York received at least 3 orders in January, and how many orders did they receive?

SELECT DISTINCT(location), COUNT(orderID) 
FROM BIT_DB.JanSales 
WHERE location LIKE '%NY%'
GROUP BY location
HAVING COUNT(orderID) > 2; 

-- How many of each type of headphone were sold in February?

SELECT Product, SUM(Quantity) AS num_sold
FROM BIT_DB.FebSales 
WHERE Product LIKE '%headphone%' 
GROUP BY Product; 

-- What was the average amount spent per account in February? (overall average, not amount spent by each account)

SELECT SUM(feb.price * feb.Quantity)/COUNT(cust.acctnum) AS avg_amount_spent
FROM BIT_DB.FebSales feb 
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id;  

-- What was the average quantity of products purchased per account in February? (overall average, not amount spent by each account)

SELECT SUM(Quantity)/COUNT(cust.acctnum) AS avg_quantity 
FROM BIT_DB.Febsales feb
LEFT JOIN BIT_DB.customers cust 
ON feb.orderID = cust.order_id; 

-- Which product brought in the most revenue in January and how much revenue did it bring in total? 

SELECT Product, SUM(Quantity * Price) AS revenue 
FROM BIT_DB.JanSales 
GROUP BY Product 
ORDER BY revenue DESC
LIMIT 1; 

